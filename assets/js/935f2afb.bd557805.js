"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[53],{1109:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"GettingStartedSidebar":[{"type":"link","label":"Introduction","href":"/","docId":"introduction"},{"type":"category","label":"ICICLE","collapsed":false,"items":[{"type":"link","label":"Getting started","href":"/icicle/introduction","docId":"icicle/introduction"},{"type":"link","label":"ICICLE Provers","href":"/icicle/integrations","docId":"icicle/integrations"},{"type":"link","label":"Golang bindings","href":"/icicle/golang-bindings","docId":"icicle/golang-bindings"},{"type":"link","label":"Rust bindings","href":"/icicle/rust-bindings","docId":"icicle/rust-bindings"},{"type":"category","label":"Primitives","collapsed":true,"items":[{"type":"link","label":"MSM","href":"/icicle/primitives/msm","docId":"icicle/primitives/msm"},{"type":"link","label":"Poseidon Hash","href":"/icicle/primitives/poseidon","docId":"icicle/primitives/poseidon"}],"collapsible":true,"href":"/icicle/primitives/overview"},{"type":"link","label":"Supporting additional curves","href":"/icicle/supporting-additional-curves","docId":"icicle/supporting-additional-curves"},{"type":"link","label":"Google Colab Instructions","href":"/icicle/colab-instructions","docId":"icicle/colab-instructions"}],"collapsible":true,"href":"/icicle/overview"},{"type":"link","label":"ZK Containers","href":"/ZKContainers","docId":"ZKContainers"},{"type":"link","label":"Ingonyama Grant program","href":"/grants","docId":"grants"},{"type":"link","label":"Contributor guide","href":"/contributor-guide","docId":"contributor-guide"},{"type":"category","label":"Additional Resources","collapsed":false,"items":[{"type":"link","label":"YouTube","href":"https://www.youtube.com/@ingo_ZK"},{"type":"link","label":"Ingonyama Blog","href":"https://www.ingonyama.com/blog"},{"type":"link","label":"Ingopedia","href":"https://www.ingonyama.com/ingopedia"},{"href":"https://github.com/ingonyama-zk","type":"link","label":"GitHub"}],"collapsible":true}]},"docs":{"contributor-guide":{"id":"contributor-guide","title":"Contributor\'s Guide","description":"We welcome all contributions with open arms. At Ingonyama we take a village approach, believing it takes many hands and minds to build a ecosystem.","sidebar":"GettingStartedSidebar"},"grants":{"id":"grants","title":"Ingonyama Grant programs","description":"Ingonyama understands the importance of supporting and fostering a vibrant community of researchers and builders to advance ZK. To encourage progress, we are not only developing in the open but also sharing resources with researchers and builders through various programs.","sidebar":"GettingStartedSidebar"},"icicle/colab-instructions":{"id":"icicle/colab-instructions","title":"Run ICICLE on Google Colab","description":"Google Colab let\'s you use a GPU free of charge, it\'s an Nvidia T4 GPU with 16 GB of memory, capable of running latest CUDA (tested on Cuda 12.2)","sidebar":"GettingStartedSidebar"},"icicle/golang-bindings":{"id":"icicle/golang-bindings","title":"Golang bindings","description":"Golang is WIP in v1, coming soon. Please checkout a previous release v0.1.0 for golang bindings.","sidebar":"GettingStartedSidebar"},"icicle/integrations":{"id":"icicle/integrations","title":"ICICLE integrated provers","description":"ICICLE has been used by companies like Celer Network, Gnark and others to accelerate their ZK proving pipeline.","sidebar":"GettingStartedSidebar"},"icicle/introduction":{"id":"icicle/introduction","title":"Getting started with ICICLE","description":"This guide is oriented towards developers who want to start writing code with the ICICLE libraries. If you just want to run your existing ZK circuits on GPU refer to this guide please.","sidebar":"GettingStartedSidebar"},"icicle/overview":{"id":"icicle/overview","title":"What is ICICLE?","description":"Static Badge","sidebar":"GettingStartedSidebar"},"icicle/primitives/msm":{"id":"icicle/primitives/msm","title":"MSM - Multi scalar multiplication","description":"MSM stands for Multi scalar multiplication, its defined as:","sidebar":"GettingStartedSidebar"},"icicle/primitives/ntt":{"id":"icicle/primitives/ntt","title":"ntt","description":""},"icicle/primitives/overview":{"id":"icicle/primitives/overview","title":"ICICLE Primitives","description":"This section of the documentation is dedicated to the ICICLE primitives, we will cover the usage and internal details of our primitives such as hashing algorithms, MSM and NTT.","sidebar":"GettingStartedSidebar"},"icicle/primitives/poseidon":{"id":"icicle/primitives/poseidon","title":"Poseidon","description":"Poseidon is a popular hash in the ZK ecosystem primarily because its optimized to work over large prime fields, a common setting for ZK proofs, thereby minimizing the number of multiplicative operations required.","sidebar":"GettingStartedSidebar"},"icicle/rust-bindings":{"id":"icicle/rust-bindings","title":"Rust bindings","description":"Rust bindings allow you to use ICICLE as a rust library.","sidebar":"GettingStartedSidebar"},"icicle/supporting-additional-curves":{"id":"icicle/supporting-additional-curves","title":"Supporting Additional Curves","description":"Supporting additional curves is still a work in progress and is bound to change in the future. Currently, the process is very manual but plan to automate the majority of it in future releases.","sidebar":"GettingStartedSidebar"},"introduction":{"id":"introduction","title":"","description":"Ingonyama is a next-generation semiconductor company, focusing on Zero-Knowledge Proof hardware acceleration. We build accelerators for advanced cryptography, unlocking real-time applications. Our focus is on democratizing access to compute intensive cryptography and making it accessible for developers to build on top of.","sidebar":"GettingStartedSidebar"},"ZKContainers":{"id":"ZKContainers","title":"ZKContainer","description":"We found that developing ZK provers with ICICLE gives developers the ability to scale ZK provers across many machines and many GPUs. To make this possible we developed the ZKContainer.","sidebar":"GettingStartedSidebar"}}}')}}]);