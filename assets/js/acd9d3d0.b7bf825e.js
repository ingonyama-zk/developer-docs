"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[244],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),c=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=c(e.components);return i.createElement(o.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,g=u["".concat(o,".").concat(d)]||u[d]||p[d]||l;return n?i.createElement(g,a(a({ref:t},m),{},{components:n})):i.createElement(g,a({ref:t},m))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:r,a[1]=s;for(var c=2;c<l;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5540:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));n(8209);const l={},a="MSM",s={unversionedId:"icicle/primitives/msm",id:"icicle/primitives/msm",title:"MSM",description:"MSM (Multi scalar multiplication) is an important primitive in ZK protocols.",source:"@site/docs/icicle/primitives/msm.md",sourceDirName:"icicle/primitives",slug:"/icicle/primitives/msm",permalink:"/icicle/primitives/msm",editUrl:"https://github.com/ingonyama-zk/developer-docs/tree/main/docs/icicle/primitives/msm.md",tags:[],version:"current",lastUpdatedBy:"ImmanuelSegol",lastUpdatedAt:1706715715,formattedLastUpdatedAt:"1/31/2024",frontMatter:{},sidebar:"GettingStartedSidebar",previous:{title:"ICICLE Primitives",permalink:"/icicle/primitives/overview"},next:{title:"Supporting Additional Curves",permalink:"/icicle/supporting-additional-curves"}},o={},c=[{value:"Using MSM",id:"using-msm",level:3},{value:"Supported algorithms",id:"supported-algorithms",level:4},{value:"MSM Modes",id:"msm-modes",level:4},{value:"Extension fields",id:"extension-fields",level:4},{value:"Benchmarks",id:"benchmarks",level:3}],m={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"msm"},"MSM"),(0,r.kt)("p",null,"MSM (Multi scalar multiplication) is an important primitive in ZK protocols."),(0,r.kt)("h3",{id:"using-msm"},"Using MSM"),(0,r.kt)("h4",{id:"supported-algorithms"},"Supported algorithms"),(0,r.kt)("p",null,"Our MSM implementation supports two algorithms."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Bucket accumulation "),(0,r.kt)("li",{parentName:"ul"},"Large triangle accumulation")),(0,r.kt)("p",null,"In most scenarios you should be using Bucket accumulation as its a more parallel friendly algorithm and will yield better performance on larger MSMs. "),(0,r.kt)("p",null,"The exception being a large batch of smaller MSMs."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"...\n\nlet mut cfg_bls12377 = msm::get_default_msm_config::<BLS12377CurveCfg>();\n\n// is_big_triangle will determine which algorithm to use \ncfg_bls12377.is_big_triangle = true;\n\nmsm::msm(&scalars, &points, &cfg, &mut msm_results).unwrap();\n...\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"is_big_triangle=true")," will activate Large triangle accumulation and ",(0,r.kt)("inlineCode",{parentName:"p"},"is_big_triangle=false")," will activate Bucket accumulation."),(0,r.kt)("h4",{id:"msm-modes"},"MSM Modes"),(0,r.kt)("p",null,"ICICLE MSM also supports two different modes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Batch MSM"),(0,r.kt)("li",{parentName:"ul"},"Single MSM")),(0,r.kt)("p",null,"Batch MSM allows you to run many MSMs with a single API call, Single MSM will launch a single MSM computation."),(0,r.kt)("p",null,"You don't need to do anything special to toggle between batch or single MSM."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"...\n\nmsm::msm(&scalars, &points, &cfg, &mut msm_results).unwrap();\n\n...\n")),(0,r.kt)("p",null,"You simply call ",(0,r.kt)("inlineCode",{parentName:"p"},"msm::msm"),", if ",(0,r.kt)("inlineCode",{parentName:"p"},"msm_results")," is a single result it will run in single MSM mode, if you are expecting many results MSM will run in batch mode."),(0,r.kt)("h4",{id:"extension-fields"},"Extension fields"),(0,r.kt)("p",null,"MSM also supports extension fields (G2). "),(0,r.kt)("p",null,"Using MSM in G2 requires a G2 config, and of course your Points should also be G2 Points."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"... \n\nlet scalars = HostOrDeviceSlice::Host(upper_scalars[..size].to_vec());\nlet g2_points = HostOrDeviceSlice::Host(g2_upper_points[..size].to_vec());\nlet mut g2_msm_results: HostOrDeviceSlice<'_, G2Projective> = HostOrDeviceSlice::cuda_malloc(1).unwrap();\nlet mut g2_cfg = msm::get_default_msm_config::<G2CurveCfg>();\n\nmsm::msm(&scalars, &g2_points, &g2_cfg, &mut g2_msm_results).unwrap();\n")),(0,r.kt)("p",null,"Here you can ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ingonyama-zk/icicle/blob/5a96f9937d0a7176d88c766bd3ef2062b0c26c37/examples/rust/msm/src/main.rs#L114"},"find an example")," of MSM on G2 Points."),(0,r.kt)("h3",{id:"benchmarks"},"Benchmarks"),(0,r.kt)("p",null,"TODO"))}p.isMDXComponent=!0},8209:(e,t,n)=>{n(7294)}}]);